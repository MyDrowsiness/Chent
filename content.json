{"meta":{"title":"MyDrowsiness个人博客","subtitle":"","description":"","author":"MyDrowsiness","url":"http://example.com","root":"/"},"pages":[{"title":"文章归档","date":"2023-12-24T13:56:14.150Z","updated":"2023-12-24T13:56:14.150Z","comments":true,"path":"archives.html","permalink":"http://example.com/archives.html","excerpt":"","text":""}],"posts":[{"title":"24第二周周报","slug":"24第二周周报","date":"2024-03-10T14:55:45.365Z","updated":"2024-03-10T16:07:29.713Z","comments":true,"path":"2024/03/10/24第二周周报/","permalink":"http://example.com/2024/03/10/24%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%91%A8%E6%8A%A5/","excerpt":"","text":"2024年3月4日-2024年3月10日 CodeWave 本周学习大纲 制作比赛需要的前端网页项目：制作js交互部分。 计算机二级考试准备：学习java知识，刷题。 配置spark:sprk的API。 本周学习日历 日历 学习内容 其他 星期一 个人生活 星期二 配置spark 星期三 制作前端网页 星期四 制作前端网页、计算机二级 星期五 计算计二级 星期六 个人生活 星期天 计算机二级、制作前端网页 本周学习内容 及 收获前端网页制作笔记：无 完成状态：已完善70% 学习内容： 正在制作js交互部分。还有部分内容没有完成，整体布局已规划好，等待完善。 学习收获对js的使用更加熟练，能加深知识点的理解使用。 计算机二级笔记：无 完成状态：学习中……未完成 学习内容：java语言基础、面对对象编程、异常处理、集合框架、I&#x2F;O流、多线程编程、图形用户界面（GUI）编程 学习收获无 下周学习大纲 完善前端项目：将js部分写好，剩余显示结果部分开始动工，继续完善。 准备计算机二级考试：继续刷题。 完善苍穹外卖","categories":[],"tags":[]},{"title":"24第一周周报","slug":"24第一周周报","date":"2024-03-03T12:56:47.067Z","updated":"2024-03-03T13:09:09.779Z","comments":true,"path":"2024/03/03/24第一周周报/","permalink":"http://example.com/2024/03/03/24%E7%AC%AC%E4%B8%80%E5%91%A8%E5%91%A8%E6%8A%A5/","excerpt":"","text":"2024年2月26日-2024年3月3日 CodeWave 本周学习大纲 准备比赛项目：制作前端项目; 学习spark。 java二级知识学习：学习java知识，刷题。 本周学习日历 日历 学习内容 其他 星期一 个人生活 星期二 学习spark 星期三 学习spark 星期四 制作前端项目 星期五 制作前端项目 星期六 制作前端项目 星期天 制作前端项目&#x2F;刷题 个人生活 本周学习内容 及 收获银行管理系统笔记：无 完成状态：未完成本周任务。 学习内容： 学习了spark的软件栈、运行架、部署模式、基本操作以及spark的部署。 制作项目加固了对知识的了解与应用能力 学习收获对bootstrap的运用更加熟悉。新学了spark相关的知识，对于以后的相关学习打下了基础。 下周学习大纲 继续前端项目：完善基本功能。 准备计算机二级考试：刷题 学习spark：争取参加比赛获奖。","categories":[],"tags":[]},{"title":"24寒假周报01","slug":"24寒假周报01","date":"2024-01-22T13:10:20.807Z","updated":"2024-01-22T13:27:16.741Z","comments":true,"path":"2024/01/22/24寒假周报01/","permalink":"http://example.com/2024/01/22/24%E5%AF%92%E5%81%87%E5%91%A8%E6%8A%A501/","excerpt":"","text":"2024年1月15日-2024年1月21日 CodeWave 本周学习大纲 学习JavaScript：学完Day1、2、3 完善苍穹外卖： 本周学习日历 日历 学习内容 其他 星期一 个人生活 星期二 jaDay01 星期三 jsDay01&#x2F;苍穹外卖 星期四 jsDay02&#x2F;苍穹外卖 星期五 jsDay02&#x2F;苍穹外卖 星期六 苍穹外卖 个人生活 星期天 个人生活 本周学习内容 及 收获银行管理系统笔记：链接 or 本地 完成状态：未完成本周任务 学习内容： js的书写、变量、常量 Redis常用命令 Redist_Spring 苍穹外卖店铺营业状态 学习收获学习了JS基础部分，JavaScript与java有极多的相似之处很好理解，易于上手。本周很多时间都在干别的事情，学习的内容不多，收获很少。 下周学习大纲 继续完善苍穹外卖 开始学习MybatisPlus 学习JavaScript","categories":[],"tags":[]},{"title":"JavaScript笔记Day02","slug":"JavascrpiptDay02","date":"2024-01-22T13:05:05.119Z","updated":"2024-01-22T13:06:34.462Z","comments":true,"path":"2024/01/22/JavascrpiptDay02/","permalink":"http://example.com/2024/01/22/JavascrpiptDay02/","excerpt":"","text":"一、运算符 赋值运算符&#x3D; +&#x3D; -&#x3D; *&#x3D; &#x2F;&#x3D; %&#x3D; 一元运算符众多的 JavaScript 的运算符可以根据所需表达式的个数，分为一元运算符、二元运算符、三元运算符一元运算符：例： 自增++，自减–。二元运算符：例： 1let num = 10 + 20 比较运算符参考java 逻辑运算符&amp;&amp; || ! 运算符优先级 二、语句 表达式和语句概念：语句是一段可以执行的代码。比如： prompt() 可以弹出一个输入框，还有 if语句 for 循环语句 表达式与语句的区别：表达式：因为表达式可被求值，所以它可以写在赋值语句的右侧。表达式 num &#x3D; 3 + 4语句：语句不一定有值，所以比如 alert() for和break 等语句就不能被用于赋值。某些情况，也可以把表达式理解为表达式语句，因为它是在计算结果，但不是必须的成分 (例如continue语句) 分支语句有的时候要根据条件选择执行代码，这种就叫分支结构：if分支语句三元运算符switch语句 循环语句while循环 三、案例：ATM存取款机①：提示输入框写到循环里面（无限循环） ②：用户输入4则退出循环 break ③：提前准备一个金额预先存储一个数额 money ④：根据输入不同的值，做不同的操作 ​ (1) 取钱则是减法操作， 存钱则是加法操作，查看余额则是直接显示金额 ​ (2) 可以使用 if else if 多分支 来执行不同的操作 完整代码： 1234567891011121314151617181920212223242526272829303132333435&lt;script&gt; // 1. 开始循环 输入框写到 循环里面 // 3. 准备一个总的金额 let money = 100while (true) &#123; let re = +prompt(`请您选择操作：1.存钱2.取钱3.查看余额4.退出`) // 2. 如果用户输入的 4 则退出循环， break 写到if 里面，没有写到switch里面， 因为4需要break退出循环 if (re === 4) &#123; break &#125; // 4. 根据输入做操作 switch (re) &#123; case 1: // 存钱 let cun = +prompt(&#x27;请输入存款金额&#x27;) money = money + cun break case 2: // 存钱 let qu = +prompt(&#x27;请输入取款金额&#x27;) money = money - qu break case 3: // 存钱 alert(`您的银行卡余额是$&#123;money&#125;`) break &#125;&#125;&lt;/script&gt;","categories":[],"tags":[]},{"title":"JavaScript笔记Day01","slug":"JavaScriptDay01","date":"2024-01-22T13:04:38.312Z","updated":"2024-01-22T13:06:41.760Z","comments":true,"path":"2024/01/22/JavaScriptDay01/","permalink":"http://example.com/2024/01/22/JavaScriptDay01/","excerpt":"","text":"一、软件1. 截图软件Snipaste 重点快捷键 注意：如果f1和f3不好用，请用 f1 截图 fn + f1 f3 定在屏幕上 fn + f3 取色：shift切换 fn+eac键是”锁定功能“ 2. 画图软件Zoomlt 重点快捷键 ctrl + 1 放大 ctrl + 2 画图 画图的时候按住ctrl是矩形 画图的时候按住tab是椭圆 画图的时候按字母可以改变颜色：r红色 b蓝色 g绿色 p粉色 o橙色 3. 思维导图XMind 重点快捷键 enter 同级 tab 下级 二、JavaScript介绍简介 graph TD A(JavaScript)==&gt;B(ECMAScript) A==&gt;C(Web APIs) C==&gt;D(DOM) C==&gt;E(Bom) 1234567891011121314151617181920212223242526272829303132333435361. JavaScript 是一种运行在客户端（浏览器）的编程语言，实现人机交互效果。2. 作用 网页特效（监听用户的一些行为让网页做出对应的反馈） 表单校验（针对表单数据的合法性进行判断） 数据交互（获取后台的数据，渲染到前端） 服务端编程（node.js）3. JavaScript的组成 - ECMAScript: 规定了js基础语法核心知识。 比如：变量、分支语句、循环语句、对象等等。 - Web APIs： DOM 操作文档，比如对页面元素进行移动、大小、添加删除等操作 BOM 操作浏览器，比如页面弹窗，检测窗口宽度、存储数据到浏览器等JS权威网站：[mdn](https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript)4. 体验(按钮点击变色) ```html &lt;body&gt; &lt;button class=&quot;pink&quot;&gt;按钮1&lt;/button&gt; &lt;button&gt;按钮2&lt;/button&gt; &lt;button&gt;按钮3&lt;/button&gt; &lt;button&gt;按钮4&lt;/button&gt; &lt;script&gt; let bts = document.querySelectorAll(&#x27;button&#x27;) for (let i=0;i&lt;bts.length;i++)&#123; bts[i].addEventListener(&#x27;click&#x27;,function()&#123; document.querySelector(&#x27;.pink&#x27;).className=&#x27;&#x27; this.className=&#x27;pink&#x27; &#125;) &#125; &lt;/script&gt; &lt;/body&gt; JavaScript书写位置 内部JavaScript直接在html文件里，用script标签包住规范：script标签写在上面（放在最底端）拓展：alert(‘你好，js’)页面弹出警告对话框 1234567&lt;body&gt; &lt;!-- 内部js --&gt; &lt;script&gt; //页面弹出警告框 alert(&#x27;你好，js&#x27;) &lt;/script&gt;&lt;/body&gt; 外部JavaScript代码写在以.js结尾的文件里语法：通过script标签，引入到html页面中。 12345&lt;body&gt; &lt;script src=&quot;./js/03-书写位置-外部.js&quot;&gt; // 中间不要写内容（写了也不执行） &lt;/script&gt;&lt;/body&gt; 1alert(&#x27;我是外部的JS文件&#x27;) 内联JavaScript代码标签写在标签内部语法： 12&lt;body&gt; &lt;button onlick=&quot;alert(&#x27;逗你玩&#x27;)&quot;&gt;点击我月薪过万&lt;/button&gt; JavaScript注释 单行注释符号：&#x2F;&#x2F; 作用：&#x2F;&#x2F;右边这一行的代码会被忽略 快捷键：ctrl + &#x2F; 块注释符号：&#x2F;* *&#x2F; 作用：在&#x2F;* 和 *&#x2F; 之间的所有内容都会被忽略 快捷键：shift + alt + A JavaScript 结束符​ 作用： 使用英文的 “ ; ” 代表语句结束。​ 实际情况： 实际开发中，可写可不写, 浏览器(JavaScript 引擎) 可以自动推断语句的结束位置。​ 现状： 在实际开发中，越来越多的人主张，书写 JavaScript 代码时省略结束符。​ 约定：为了风格统一，结束符要么每句都写，要么每句都不写（按照团队要求）。 1234&lt;script&gt; alert(&quot;书写1&quot;); alert(&quot;书写2&quot;)&lt;/script&gt; JavaScript 输入输出语 概念:输出和输入也可理解为人和计算机的交互，用户通过键盘、鼠标等向计算机输入信息，计算机处理后再展示结果给用户，这便是一次输入和输出的过程。 输出语法： 1document.write(&#x27;要输出的内容&#x27;) 作用：向body语句输出内容 注意：如果输出内容写的是标签，也会被解析成网页元素 1alert(&#x27;要输出的内容&#x27;) 作用：页面弹出警告对话框 1console.log(&#x27;控制台打印&#x27;) 作用：控制台输出语法，程序员调式使用 输入语法： 1prompt(&#x27;请输入您的姓名：&#x27;) 作用：显示一个对话框，对话框中包含一条文字信息，用来提示用户输入文字 JavaScript 代码执行顺序：按HTML文档流顺序执行JavaScript代码alert() 和 prompt() 它们会跳过页面渲染先被执行 字面量在计算机科学中，字面量（literal）是在计算机中描述 事&#x2F;物。 三、变量 概念变量是计算机存储数据的“容器”，它可以让计算机变得有“记忆”。注意：变量不是数据本身，它们仅仅是一个用于存储数值的容器。可以理解为是一个个用来装东西的纸箱子。 使用声明变量：要想使用变量，首先需要创建变量（也称为声明变量或者定义变量） 1let 变量名 声明变量有两部分构成：声明关键字、变量名（标识）let 即关键字 (let: 允许、许可、让、要)，所谓关键字是系统提供的专门用来声明（定义）变量的词语 1let age //age 即变量的名称，也叫标识符 变量赋值： 123456//1.声明一个age变量let age//2.age变量赋值18age = 18//3.输出age变量alert(age) 注意：是通过变量名来获得变量里面的数据该操作也被称为变量初始化 更新变量：变量赋值后，还可以通过简单地给它一个不同的值来更新它。 声明多个变量：变量赋值后，还可以通过简单地给它一个不同的值来更新它。语法：多个变量中间用逗号隔开 1let age = 18, nuname = &#x27;pink&#x27;//不推荐，可读性差 123//推荐写法let age = 18let nuame = &#x27;pink&#x27; 变量本质内存：计算机中存储数据的地方，相当于一个空间。变量本质：是程序在内存中申请的一块用来存放数据的小空间。 变量命名规则规范规则：不能用关键字关键字：有特殊含义的字符，JavaScript 内置的一些英语词汇。例如：let、var、if、for等只能用下划线、字母、数字、$组成，且数字不能开头字母严格区分大小写，如 Age 和 age 是不同的变量规范：起名要有意义遵守小驼峰命名法第一个单词首字母小写，后面每个单词首字母大写。例：userName 数组参考java 四、常量概念： 使用 const 声明的变量称为“常量”。使用场景： 当某个变量永远不会改变的时候，就可以使用 const 来声明，而不是let。命名规范： 和变量一致常量使用： 123456//声明常量canst G = 9.8//修改G = 9.9//输出这个常量console.log(G) 五、数据类型JS 数据类型整体分为两大类： 1.基本数据类型 number 数字型 string字符串型 boolean 布尔型 undefind 未定义型 null 空类型 2.引用数据类型 object 对象 其余参考Java…… 检测数据类型：通过 typeof 关键字检测数据类型typeof 运算符可以返回被检测的数据类型。它支持两种语法形式： 作为运算符： typeof x （常用的写法） 函数形式： typeof(x) 换言之，有括号和没有括号，得到的结果是一样的，所以我们直接使用运算符的写法 1console.log(typeof age)","categories":[],"tags":[]},{"title":"23十七周周报","slug":"23十七周周报","date":"2023-12-24T12:10:56.964Z","updated":"2024-03-03T13:10:12.690Z","comments":true,"path":"2023/12/24/23十七周周报/","permalink":"http://example.com/2023/12/24/23%E5%8D%81%E4%B8%83%E5%91%A8%E5%91%A8%E6%8A%A5/","excerpt":"","text":"2023年12月11日-2023年12月17日 CodeWave 本周学习大纲 web前端：移动适配：rem、less、vw；响应式网页：媒体查询、Bootstrap。 期末复习：数据结构 本周学习日历 日历 学习内容 其他 星期一 个人生活 星期二 Web 星期三 Web 星期四 Web 星期五 个人生活 星期六 Web 星期天 Web 本周学习内容 及 收获银行管理系统笔记：链接 链接 完成状态：未完成本周任务。 学习内容： 学习了移动适配的相关知识内容。 学习了响应式网页的编写以及Bootstrap模板的使用。 学习收获了解并学会了web页面的各种屏幕的适配，收获很多，但是感觉暂时用不上会很容易忘记。打算寒假利用这个知识来编写一个网页来作为复习。然后就是响应式网页，真的很有用，能让我的web页面更加专业好用，学到了使用Bootstrap模板，但是使用模板也蛮繁杂的，需要看懂模板的代码，需要修改&#x2F;覆盖模板的样式挺麻烦的。总之这周学到的web知识很有用，学的内容不多。 下周学习大纲 JS：学完 苍穹外卖：继续完善 复习：准备期末考试","categories":[],"tags":[]},{"title":"Web笔记Day04","slug":"2023-12-24-WebDay04","date":"2023-12-24T11:58:37.728Z","updated":"2023-12-24T14:21:57.493Z","comments":true,"path":"2023/12/24/2023-12-24-WebDay04/","permalink":"http://example.com/2023/12/24/2023-12-24-WebDay04/","excerpt":"","text":"一、响应式网页解决方式 媒体查询 12345@media (媒体特性)&#123; 选择器&#123; 样式; &#125;&#125; Bootstrap“简介、直观、强悍的前端开发框架，让web开发更迅速、简单” 1. 媒体查询媒体特性max-width: 最大宽度min-width: 最小宽度 1234567891011121314&lt;style&gt; /* 屏幕宽度小于等于768，网页背景色是粉色--&gt;max-width */ @media (max-width: 768px)&#123; body&#123; background-color: pink; &#125; &#125; /* 屏幕宽度大于等于1200，网页背景色是绿色--&gt;min-width */ @media (min-width: 1200px)&#123; body&#123; background-color: green; &#125; &#125;&lt;/style&gt; 书写顺序需求： 默认网页背景色是灰色 屏幕宽度大于等于768px，网页背景色是粉色 屏幕宽度大于等于992px，网页背景色是绿色 屏幕宽度大于等于1200px，网页背景色是skyblue提示 min-width(从小到大) max-width(从大到小) ● 一定要按顺序写，否则效果会被层叠消失。 案例：左侧隐藏需求：网页宽度小于等于768px则隐藏左侧区域。 123456789101112131415161718192021222324&lt;style&gt; *&#123; margin: 0; padding: 0; &#125; .box&#123; display: flex; &#125; .left&#123; width: 300px; height: 500px; background-color: pink; &#125; .main&#123; flex: 1; /*占用剩余父级尺寸，否则因文字导致left挤压偏小 */ height: 500px; background-color: skyblue; &#125; @media (max-width:768px)&#123; .left&#123; display: none;/*左侧消失*/ &#125; &#125;&lt;/style&gt; 完整写法了解： 1@media 关键词 媒体类型 and (媒体特性) &#123;css代码&#125; 关键词 &#x2F; 逻辑操作符 and only not 媒体类型是用来区分设备类型的，如屏幕设备、打印设备等，其中手机、电脑、平板都属于屏幕设备。 类型名称 值 描述 屏幕 screen 带屏幕的设备 打印预览 print 打印预览模式 阅读器 speech 屏幕阅读模式 不区分类型 all 默认值，包括以上3种情形 媒体特性主要用来描述媒体类型的具体特征，如当前屏幕的狂爱、分辨率、横屏或竖屏等。 特性名称 属性 值 视口的宽和高 width、heigth 数值 视口最大宽和高 max-width、max-heigth 数值 视口最小宽和高 min-width、min-heigth 数值 屏幕方向 orientation portrait:竖屏landscape:横屏 思考： 当@media内css样式太多，代码复杂混乱，该如何解决？ 12345@media (媒体特性)&#123; 选择器&#123; ...... &#125;&#125; 解决： 1&lt;link rel=&quot;stylesheet&quot; media=&quot;逻辑符 媒体类型 and (媒体特性)&quot; href=&quot;xx.css&quot;&gt; 案例： 1234&lt;!-- 视口宽度小于等于768px，网页背景色是粉色 --&gt;&lt;link rel=&quot;stylesheet&quot; media=&quot;(max=width: 768px)&quot; href=&quot;./pink.css&quot;&gt;&lt;!-- 视口宽度小于等于768px，网页背景色是粉色 --&gt;&lt;link rel=&quot;stylesheet&quot; media=&quot;(min=width: 1200px)&quot; href=&quot;./green.css&quot;&gt; 2. Bootstrap简介Bootstrap是推特Twitter公司开发维护的前端UI框架，它提供了大量编写好的CSS样式，允许开发者结合一定HTML结构及JavaScript，快速编写功能完善的网页及常见交互效果。 中文官网：https://www.bootcss.com 使用 下载：下载Bootstrap V5中文文档–&gt;进入中文文档–&gt;下载 Bootstrap 生产文件（bootsrtap.css为正常书写格式；bootstrap.min.css写在一行占空间小。单纯使用框架建议使用bootstrap.min.css） 使用：引入Bootstrap CSS文件 1&lt;link rel=&quot;stylesheet&quot; href=&quot;../BootStrap/css/bootstrap.min.css&quot;&gt; 调用类名：container: 响应式布局版心类 1&lt;div class=&quot;container&quot;&gt;测试&lt;/div&gt; 栅格系统栅格化是指将整个网页的宽度分成12等份，每个盒子占用对应的份数。例如：一行排4个盒子，则每个盒子占3份即可（12&#x2F;4&#x3D;3） Breakpoint断点 Class infix分类中缀 Dimensions尺寸 Extra small None &lt;576px Small sm ≥576px Medium md ≥768px Large lg ≥992px Extra large xl ≥1200px Extra extra large xxl ≥1400px 响应区间： xs&lt;576px sm≥576px md≥768px lg≥992px xl≥1200px xxl≥1400px Container None(auto) 540px 720px 960px 1140px 1320px Class prefix前缀 .col- .col-sm- .col-md- .col-lg- .col- .col-xxl- 常用布局类：▢ col-*- ：列（例如Lcol-xxl-3）▢ row ：行 代码： 12345678910111213141516&lt;body&gt; &lt;!-- 视口宽度大于等于1200px,一行排4个盒子 -&gt;3 视口宽度大于等于768px,一行排2个盒子 -&gt;6 视口宽度大于等于576px,一行排1个盒子 -&gt;12 --&gt; &lt;!-- 版心 -&gt; row -&gt; 子级 --&gt; &lt;div class=&quot;container&quot;&gt; &lt;div class=&quot;row&quot;&gt; &lt;div class=&quot;col-xl-3 col-md-6 col-sm-12&quot;&gt;1&lt;/div&gt; &lt;div class=&quot;col-xl-3 col-md-6 col-sm-12&quot;&gt;2&lt;/div&gt; &lt;div class=&quot;col-xl-3 col-md-6 col-sm-12&quot;&gt;3&lt;/div&gt; &lt;div class=&quot;col-xl-3 col-md-6 col-sm-12&quot;&gt;4&lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/body&gt; *显示调用类名的插件：IntelliSence for CSS class names in HTML 全局样式Button类 ▢ btn：默认样式 ▢ btn-success：成功 ▢ btn-warning：警告 ▢ …… ▢ 按钮尺寸：btn-lg &#x2F; btn-sm 1234&lt;body&gt; &lt;button class=&quot;btn btn-success btn-sm&quot;&gt;小绿色按钮&lt;/button&gt; &lt;button class=&quot;btn btn-warning btn-lg&quot;&gt;大黄色按钮&lt;/button&gt;&lt;/body&gt; 表格类 ▢ table：默认样式 ▢ table-striped：隔行变色 ▢ table-success：表格颜色(绿) ▢ …… 1234567891011121314&lt;body&gt; &lt;table class=&quot;table table-striped&quot;&gt; &lt;tr class=&quot;table-success&quot;&gt; &lt;th&gt;姓名&lt;/th&gt; &lt;th&gt;年龄&lt;/th&gt; &lt;th&gt;性别&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;张三&lt;/th&gt; &lt;th&gt;18&lt;/th&gt; &lt;th&gt;男&lt;/th&gt; &lt;/tr&gt; &lt;/table&gt;&lt;/body&gt; 组件(Components) 引入样式表 引入js文件 复制结构，修改内容 例如导航、轮播图等，在官网copy代码即可，需要自定义可以配合网页检查，寻找需要修改的元素。当想要覆盖Bootstrap样式需要在末尾添加 !important; 字体图标下载： 导航&#x2F;Extend：图标库–&gt;安装–&gt;下载安装包–&gt;bootstarp-icons-1.X.X.zip 使用： 1. 复制font文件夹到项目目录 2. 网页引入bootstrap-icon.css文件 3. 调用CSS类名（图标对应的类名） 1234567891011121314151617181920&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;../BootStrap/font/bootstrap-icons.css&quot;&gt; &lt;style&gt; /* 美化字体图标 */ .bi-android2&#123; font-size: 100px; color: green; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;!-- 安卓图标 --&gt; &lt;span class=&quot;bi-android2&quot;&gt;&lt;/span&gt;&lt;/body&gt;&lt;/html&gt; 案例腾讯全端：略","categories":[],"tags":[]},{"title":"Web笔记Day03","slug":"2023-12-20-WebDay03","date":"2023-12-20T13:48:37.256Z","updated":"2023-12-24T14:21:51.310Z","comments":true,"path":"2023/12/20/2023-12-20-WebDay03/","permalink":"http://example.com/2023/12/20/2023-12-20-WebDay03/","excerpt":"","text":"一、移动适配谷歌模拟器谷歌浏览器自带的模拟器，可以模拟其他设备，使查看不同端的css效果更方便。（edge浏览器也有，就是“检查”右边的图标） 屏幕分辨率 屏幕分辨率：纵横向上的像素点数，单位是px。 pc分辨率1920*1080 1366*768 …… 缩放150%1920&#x2F;150% 1080&#x2F;150% 总结：硬件分辨率——物理分辨率（出厂设置） 缩放调节的分辨率——逻辑分辨率（软件&#x2F;驱动设置） PS:网页的PC&#x2F;移动端均参考逻辑分辨率。 视口 手机屏幕尺寸不同，网页宽度均为100%。 网页的宽度和逻辑分辨率尺寸相同。 视口：显示HTML网页的区域，用来约束HTML尺寸（vscode自动生成） 123456789&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;!-视口标签：规定HTML的尺寸，让HTML的宽度=逻辑分辨率的宽度/设备的宽度--&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt; width&#x3D;device-width: 视口宽度&#x3D;设备宽度initial-scale&#x3D;1.0 缩放1倍（不缩放） 二倍图 概念：设计稿里面每个元素的尺寸倍数。 作用：防止图片在高分辨率屏幕下模糊失真。 现阶段设计稿参考IPhone6&#x2F;7&#x2F;8，设备宽度375px产出设计稿。 二倍图设计稿尺寸：750px。 使用设计稿：点击设计稿(显示宽750px)–&gt;设计图2x &#x2F; 像素密度@2x。 适配方案 宽度适配：宽度自适应。▢ 百分比布局▢ Flex布局 等比适配：宽高等比缩放。▢ rem▢ vw 二、rem概念 rem单位，是相对单位。 rem单位是相对于HTML标签字号计算结果。 1rem &#x3D; 1HTML字号大小。 代码123456789101112131415&lt;style&gt; *&#123; margin: 0; padding: 0; &#125; /* 1. 给HTML标签加字号 */ html&#123; font-size: 30px; &#125; /* 2. 使用rem单位书写尺寸 */ .box&#123; width: 5rem; /* 30px*5 = 150px */ height: 3rem; /* 30px*3 = 90px */ background-color: pink; &#125;&lt;/style&gt; 思考 手机屏幕大小不同，分辨率不同，如何设置不同的HTML标签字号？ 答：媒体查询：媒体查询能够检测视口的宽度，然后编写差异化的CSS样式。当某个条件成立，执行对应的CSS样式 12345@media (媒体特性)&#123; 选择器&#123; CSS属性 &#125;&#125; 12345678&lt;style&gt; /* 视口宽度是375，网页背景色是绿色 */ @media (width:375px)&#123; body&#123; background-color: green; &#125; &#125;&lt;/style&gt; PS: 当屏幕缩放比125% –&gt; html宽375.2px @media不执行 设备宽度不同，HTML标签字号设置多少合适？ 答：设备宽度大，元素尺寸大。设备宽度小，元素尺寸小。目前rem布局方案中，将网页等待分成10份，HTML标签的字号为视口宽度的1&#x2F;10。 12345678910111213141516171819202122232425262728&lt;style&gt;/*该方法繁琐难用*/ *&#123; margin: 0; padding: 0; &#125; /* 1. 使用媒体查询，给不同视口的屏幕设置不同的HTML字号 */ @media (width:320px)&#123; html&#123; font-size: 32px; &#125; &#125; @media (width:375px)&#123; html&#123; font-size: 37.5px; &#125; &#125; @media (width:414px)&#123; html&#123; font-size: 41.4px; &#125; &#125; /* 2. 使用rem单位书写尺寸 */ .box&#123; width: 5rem; height: 3rem; background-color: pink; &#125;&lt;/style&gt; rem-flexible.jsflexible.js是手机淘宝开发出来的一个用于适配移动端的js库。核心原理就是根据不同的视口宽度给网页中html根节点设置不同的font-size。 1234&lt;body&gt; ...... &lt;script src=&quot;./js/flexible.js&quot;&gt;&lt;/script&gt;&lt;/body&gt; 工作中，书写代码的尺寸要参照设计稿尺寸，设计稿中是px还是rem?——rem 如何确定rem的数值？目标：计算68px是多少个rem（设计稿适配375px视口）N*37.5&#x3D;68 N&#x3D;68&#x2F;37.5rem单位尺寸：▢ 确认基准根字号► 查看设计稿宽度→确定参考设备宽度（视口宽度）→确定基准跟字号（1&#x2F;10视口宽度）▢ rem单位尺寸► rem单位的尺寸&#x3D;px单位数值 &#x2F; 基准根字号 12345678&lt;style&gt; /* 68*29 */ div&#123; width: 1.813rem; height: 0.773rem; background-color: pink; &#125;&lt;/style&gt; 三、less简介 less是一个CSS预处理器，Less文件后缀是.less。扩充了CSS语言，使CSS具备一定的逻辑性、计算能力。 浏览器不识别Less代码，目前阶段，网页要引入对应的CSS文件。 VS Code插件：Easy LESS,保存less文件后&#x3D;&#x3D;自动生成&#x3D;&#x3D;对应的CSS文件。 1234567.father&#123; color: red; width: (68 / 37.5rem);//拥有计算能力 .son&#123; height: (29 / 37.5rem);//逻辑性更好 &#125;&#125; 1234567.father &#123; color: red; width: 1.81333333rem;&#125;.father .son &#123; height: 0.77333333rem;&#125; 注释 单行注释(CSS不支持，生成CSS后不显示)► 语法：&#x2F;&#x2F;注释内容► 快捷键：ctrl+&#x2F; 块注释► 语法：&#x2F;*注释内容*&#x2F;► 快捷键：Shift+Alt+A 运算加减乘直接书写计算表达式。除法需要添加小括号或. （推荐使用小括号） 1234567891011.box&#123; width: 50 + 50px; width: 200 - 50px; width: 100 * 2px; //除法 width: (68/37.5rem); height: 68./37.5rem; //如果表达式有多个单位，最终CSS里面以第一个单位为准 height: (200px / 37.5rem);&#125; 12345678.box &#123; width: 100px; width: 150px; width: 200px; width: 1.81333333rem; height: 1.81333333rem; height: 5.33333333px;&#125; 嵌套作用：快速生成后代选择器 123456.父级选择器&#123; //父级样式 .子级选择器&#123; //子级样式 &#125;&#125; 1234567891011121314.father&#123; color:red; .son&#123; width: 200px; a&#123; color: green; // &amp; 表示的是当前选择器，代码写到谁的大括号里面就表示谁不会生成后代选择器 //应用：配合hover伪类选择器或nth-child结构伪类选择器使用 &amp;:hover&#123; color: blue; &#125; &#125; &#125;&#125; 12345678910111213.father &#123; color: red;&#125;.father .son &#123; width: 200px;&#125;.father .son a &#123; color: green;&#125;.father .son a:hover &#123; color: blue;&#125; 变量概念：容器，存储数据。作用：存储数据，方便使用和修改。语法： ► 定义变量: @变量名 : 数据; ► 使用变量: CSS属性 : @变量名; 1234567891011121314//1. 定义变量//@myColor: pink; --&gt; 书写与统一更改都很方便@myColor: rgb(213, 114, 131);//2. 使用变量div&#123; color: @myColor;&#125;p&#123; background-color: @myColor;&#125;a&#123; color: @myColor;&#125; 123456789div &#123; color: #d57283;&#125;p &#123; background-color: #d57283;&#125;a &#123; color: #d57283;&#125; 导入作用：导入less公共样式文件。语法：导入：@import “文件路径”;提示：如果是less文件可以省略后缀。 防止不同less文件生成多个CSS文件，将其他less导入到index.less中 12@import &quot;./less变量.less&quot;;@import &quot;./less嵌套.less&quot;; 12345678910111213141516171819202122/*@myColor: pink;*/div &#123; color: #d57283;&#125;p &#123; background-color: #d57283;&#125;a &#123; color: #d57283;&#125;.father &#123; color: red;&#125;.father .son &#123; width: 200px;&#125;.father .son a &#123; color: green;&#125;.father .son a:hover &#123; color: blue;&#125; 导出写法：在less文件的第一行添加 &#x2F;&#x2F; out: 存储URL提示：文件夹名称后面添加&#x2F; 12345// out: ./css/ // out: ./index.css// out: ./mycss/index.css 禁止导出例如在前文需要导入到index.less的less文件就不需要导出自己（生成CSS）写法：在less文件第一行添加：&#x2F;&#x2F;out:false 1// out:false 四、VW概念 此为相对单位 相对视口尺寸计算结果vw: &#x3D;&#x3D;v&#x3D;&#x3D;iewport &#x3D;&#x3D;w&#x3D;&#x3D;idth▢ 1vw&#x3D;1%视口宽度vh: &#x3D;&#x3D;v&#x3D;&#x3D;iewport &#x3D;&#x3D;h&#x3D;&#x3D;eight▢ 1vh&#x3D;1%视口高度 vw布局 确定设计稿对应的vw尺寸（1&#x2F;100视口宽度）► 查看设计稿宽度 –&gt; 确定参考设备宽度（视口宽度） –&gt; 确定vw尺寸（1&#x2F;100视口宽度） vw单位尺寸&#x3D;想要的尺寸px &#x2F; (1&#x2F;100视口宽度) vh单位问题思考：开发中，能不能vw和vh混用呢？ ► 不能 ► vh是1&#x2F;100视口高度，全面屏视口高度尺寸大，如果混用可能会导致盒子变形。","categories":[],"tags":[]},{"title":"Web笔记Day02","slug":"2023-12-17-WebDay02","date":"2023-12-18T11:52:07.458Z","updated":"2023-12-24T14:21:45.653Z","comments":true,"path":"2023/12/18/2023-12-17-WebDay02/","permalink":"http://example.com/2023/12/18/2023-12-17-WebDay02/","excerpt":"","text":"一、空间转换1. 空间转换-平移定义空间，是从坐标轴角度定义的X、Y和Z三条坐标轴构成了一个立体空间；Z轴位置与视线方向相同，正方向指向我。 属性1234transform: translate3d(x,y,z);transform: translateX();transform: translateY();transform: translateZ(); 取值正负均可像素单位数值百分比(参照盒子自身尺寸计算结果) $\\color{red}{PS: 3d小括号里面必须逗号分隔开三个数，否则无效果。}$ 2. 视距 perspective作用指定了观察者与Z&#x3D;0平面的距离，为元素添加透视效果。 透视效果近大远小、近实远虚。 属性添加给父级，取值范围800-1200。perspective：视距；PS:视距属性必须添加给直接父级，否则无效。视距设置过大，效果不明显，视距设置过小，直接乎到脸上。 3. 空间转换-旋转书写transform: rotateZ(角度deg); &#x2F;&#x2F;沿着Z轴旋转，效果跟平面旋转效果一样。transform: rotateX(角度deg); &#x2F;&#x2F;正值向后倒，负值往我扑。transform: rotateY(角度deg);PS:如果不给父级设置perspective，则图仅压缩，无近大远小看不出旋转。 左手法则根据旋转方向确定取正负左手握住旋转轴，拇指指向正值方向，其他四个手指弯曲方向为旋转正值方向。 拓展rotate3d(x,y,z,角度度数)：用来设置自定义旋转轴的位置及旋转的角度。x,y,z取值为0-1之间的数字。 4. 立体呈现作用设置元素的子元素是位于3D空间中还是平面中 属性名transform-style 属性值flat:子级处于平面中。preserve-3d：子级处于3D空间。 呈现步骤1.父元素添加transform-style: preserve-3d;2.子级定位3.调整子盒子的位置（位移或旋转） 5. 空间转换-缩放属性transform:scale3d(x,y,z);transform:scaleX();transform:scaleY();transform:scaleZ(); 二、动画$\\color{maroon}{animation:加强版的过渡。}​$ 1. 过渡与动画过渡：实现两个状态间的变化过程动画：实现多个状态见的变化过程，动画过程可控（虫回复播放、最终画面，是否暂停） 2. 动画实现步骤定义动画123456789101112&lt;!--两个状态--&gt;@keyframes 动画名称 1&#123; from &#123;&#125; to &#123;&#125;&#125;&lt;!--多个状态--&gt;@keyframes 动画名称2 &#123; 0% &#123;&#125; 10% &#123;&#125; …… 100% &#123;&#125;&#125; 使用动画animation: 动画名称 动画时长s； 代码123456789101112131415161718192021222324252627282930313233343536&lt;style&gt; .box&#123; width: 200px; height: 100px; background-color: pink; /*使用动画*/ animation: change 1s; &#125; /*动画一：宽度从200变化到800*/ @keyframes change&#123; from&#123; width: 200px; &#125; to&#123; width: 800px; &#125; &#125; /* 动画二：从200*100变化到300*300再变化到800*500 (n%：动画时长百分比) */ @keyframes change&#123; 0%&#123; width: 200px; heoght: 100px &#125; 20%&#123; width: 300px; height: 300px; &#125; 100%&#123; width: 800px; height: 500px; &#125; &#125; &lt;/style&gt; animation属性普通写法：animation: 动画名称 动画时长s 速度曲线 延迟时间 重复次数 动画方向 执行完毕时状态；$\\color","categories":[],"tags":[]},{"title":"23年16周周报","slug":"23十六周周报","date":"2023-12-18T07:55:59.344Z","updated":"2023-12-24T14:21:28.550Z","comments":true,"path":"2023/12/18/23十六周周报/","permalink":"http://example.com/2023/12/18/23%E5%8D%81%E5%85%AD%E5%91%A8%E5%91%A8%E6%8A%A5/","excerpt":"","text":"2023年12月11日-2023年12月17日 tag：CodeWave 本周学习大纲 Web前端：空间转换、动画。 搭建hexo博客：下载hexo、搭建博客、使用博客主题、自定义主题内容。 考试准备：英语四级 本周学习日历 日历 学习内容 其他 星期一 Web 星期二 Web 星期三 搭建博客 星期四 使用博客主题&#x2F;自定义博客内容 星期五 学英语 星期六 四级考试&#x2F;休息 星期天 个人生活 本周学习内容 及 收获 Web前端笔记：Web-Day02 完成状态：未完成本周任务。美化博客花了很久的时间，四级考试前后懈怠了没有学习。 学习内容： 空间转换：平移、旋转、视距、立体呈现、缩放 动画：走马灯效果 学习收获web学习的内容并不多，主要是学了空间转换和动画效果。但是我花了很多时间美化博客，让我摸清了博客跟目录文件和代码作用，自主学习能力增强了一丢丢。我在美化博客的时候使用了阿里OSS库里面存储的图片，第二天发现OSS欠费了…现在博客就是无图片状态了。 下周学习大纲 Web：基础部分学完。 javaweb:复习javaweb、完善苍穹外卖。","categories":[],"tags":[]},{"title":"CodeWave小组周报","slug":"组员的周报","date":"2023-12-17T15:55:09.908Z","updated":"2024-03-10T16:10:26.359Z","comments":true,"path":"2023/12/17/组员的周报/","permalink":"http://example.com/2023/12/17/%E7%BB%84%E5%91%98%E7%9A%84%E5%91%A8%E6%8A%A5/","excerpt":"","text":"2024年 第2周（3.4 - 3.10） 陈涛 周报链接 项怀锋 暂无 黄倩 https://snail0220.github.io/2024/03/10/huang2024-3-4-2024-3-10%E5%91%A8%E6%8A%A5/ 刘浩 https://lh-bllog.github.io/ 2024年 第1周（12.27 - 3.3） 陈涛 周报链接 项怀锋 暂无 黄倩 https://snail0220.github.io/2024/03/03/huang2024-2-26-2024-3-3%E5%91%A8%E6%8A%A5/ 刘浩 https://lh-bllog.github.io/ 2024年 寒假 （01.15 - 01.21） 项怀锋 失联 刘士毅 无 黄倩 https://snail0220.github.io/2024/01/21/huang2024-1-15-2024-1-21%E5%AD%A6%E4%B9%A0%E5%91%A8%E6%8A%A5/ 刘浩 上传失败 2023年 第17周（12.18 - 12.24） 陈涛 周报链接 项怀锋 暂无 刘士毅 暂无 黄倩 https://snail0220.github.io/ 刘浩 https://lh-bllog.github.io/ 2023年 第16周（12.11 - 12.17） 陈涛 周报链接 项怀锋 暂无 刘士毅 暂无 黄倩 https://snail0220.github.io/ 刘浩 https://lh-bllog.github.io/","categories":[],"tags":[]},{"title":"周报模板","slug":"周报模板","date":"2023-12-17T14:13:49.566Z","updated":"2024-03-03T12:56:40.644Z","comments":true,"path":"2023/12/17/周报模板/","permalink":"http://example.com/2023/12/17/%E5%91%A8%E6%8A%A5%E6%A8%A1%E6%9D%BF/","excerpt":"","text":"2024年2月26日-2024年3月3日 CodeWave 一个可以删除的提醒： 学习大纲的任务项和学习日历对应。 学习大纲的任务项分为以下两种 与代码相关的：xx项目设计[代码，策划],学习java,专业内比赛。 与代码无关的：期末复习，课堂作业，专业外比赛。 若当天学习内容为空，在第三栏浅浅写一下理由（不做硬性要求）。 可以自己发挥。 本周学习大纲 银行管理系统：做完银行管理系统。 JavaSE学习：学习面向对象高级的static,继承,多态。 JavaSE复习：复习面向对象基础的this关键字，构造器，封装，JavaBean。 本周学习日历 日历 学习内容 其他 星期一 银行管理系统&#x2F;JavaSE学习&#x2F;JavaSE复习 星期二 银行管理系统&#x2F;JavaSE学习 星期三 银行管理系统&#x2F;JavaSE学习&#x2F;JavaSE复习 星期四 银行管理系统&#x2F;JavaSE学习 星期五 银行管理系统&#x2F;JavaSE学习 星期六 无 个人生活 星期天 复习期末考试 本周学习内容 及 收获银行管理系统笔记：链接 or 本地 完成状态：已完成本周任务。 学习内容： 完成了用户登录 完成了用户转账 完成了用户取款 完成了用户销户 学习收获印象比较深的是对非法输入的判断和拦截和随机生成卡号。另外，在做项目中我遇到了一个异常（比如空指针报错），我如何解决了他（自己思考&#x2F;问组长&#x2F;问老师&#x2F;百度搜索），原因是因为我并没有给此变量赋值就调用了它的方法。 其他两个学习内容同理 下周学习大纲 JavaSE复习：复习面向对象基础的this关键字，构造器，封装，JavaBean。 复习期末考试：复习高数&#x2F;线代&#x2F;英语","categories":[],"tags":[]},{"title":"Web笔记Day01","slug":"2023-12-09-WebDay01","date":"2023-12-13T12:48:26.603Z","updated":"2023-12-24T14:21:39.826Z","comments":true,"path":"2023/12/13/2023-12-09-WebDay01/","permalink":"http://example.com/2023/12/13/2023-12-09-WebDay01/","excerpt":"","text":"一、平面转换transform1.概念作用为元素添加动态效果，一般与过度配合使用。 概念改变盒子在平面内的形态（位移、旋转、缩放、倾斜）。 代码12345678910111213&lt;style&gt; div&#123; margin: 100px 0; width: 100px; height: 100px; background-color: pink;; transition: all 1s; &#125; /* 鼠标滑过：添加动态效果 */ div:hover&#123; transform: translate(800px) rotate(360deg) scale(2) skew(30deg); &#125;&lt;/style&gt; transform平面转换，一般搭配transition使用：平移：translate(800px)旋转：rotate(360deg)缩放：scale(2)倾斜：skew(30deg) 拓展平面转换又叫 2D转换。 2.平面转换-平移属性transform:translate(X轴移动距离，Y轴移动距离)； 取值像素单位数值。百分比(参照盒子自身尺寸计算结果)。正负均可。 技巧translate()只写一个值，表示沿着X轴移动。单独设置X或Y轴移动距离：translateX()或translateY()。 代码123456789101112131415161718192021222324&lt;style&gt; .father&#123; width: 500px; height: 300px; margin: 100px auto; border: 1px solid #000; &#125; .son&#123; width: 200px; height: 100px; background-color: pink; transition: all 0.5s; &#125; /* 鼠标移入到父盒子，son改变位置 */ .father:hover .son&#123; /*像素*/ transform: translate(300px,200px); /*百分比：参照盒子自身尺寸计算结果*/ transform: translate(-50%,100%); &#125;&lt;/style&gt;&lt;div class=&quot;father&quot;&gt; &lt;div class=&quot;son&quot;&gt;&lt;/div&gt;&lt;/div&gt; 拓展绝对定位元素居中（例如：登录框） 1234567891011&lt;style&gt; .box&#123; position: absolute; left: 50%; top: 50%; transform: translate(-50%,-50%); width: 200px; height: 100px; background-color: pink; &#125;&lt;/style&gt; 3.平面转换-旋转属性transform:rotate(旋转角度deg)角度单位是deg 技巧取正负均可取值为正，顺时针旋转取值为负，逆时针旋转 代码12345678910111213&lt;style&gt; img&#123; margin: 200px 600px; width: 200px; transition: all 2s; &#125; /* 鼠标悬停到图片上面，添加旋转效果 */ img:hover&#123; /* 正数：顺时针旋转；负数：逆时针旋转 */ transform: rotate(720deg); transform: rotate(-720deg); &#125;&lt;/style&gt; 4.平面转换-改变转换原点默认情况下，转换原点是盒子中心点 属性transform-origin:水平原点位置 垂直原点位置 取值✿方位名词(left、top、right、botten、center)像素单位数值百分比 5.平面转换-多重转换技巧transform: translate() rotate(); 代码1234567891011121314151617181920212223242526&lt;style&gt; .box&#123; margin: 200px 350px; width: 800px; height: 200px; border: 1px solid #000; &#125; img&#123; width: 200px; transition: all 5s; &#125; /* 鼠标移入box,图片边走边转 */ .box:hover img&#123; /* 先平移再旋转（目标效果） */ transform: translate(600px) rotate(360deg); /* 先旋转再平移 旋转会改变坐标轴向，导致效果不一样 多重转换：一第一种转换形态的坐标轴为准 */ transform: rotate(360deg) translate(600px); /* 层叠性，会被后面属性覆盖 */ transform: translate(600px); transform: rotate(360deg); &#125;&lt;/style&gt; 6.平面转换-缩放思考改变元素的width或height属性能实现吗？注：该方法从左上角开始放大。 属性transform: scale(缩放倍数)；transform: scale(X轴缩放倍数，Y轴缩放倍数); 技巧通常，只为scale()设置一个值，表示X轴和Y轴等比例缩放取值大于1表示放大，取值小于1表示缩小 7.平面转换-倾斜属性transform: skew(); 取值角度度数deg 二、渐变1.概念定义渐变是多个颜色逐渐变化的效果，一般用于设置盒子背景 分类1.线性渐变2.径向渐变 2.线性渐变属性123456background-image: linear-gradient( 渐变方向, 颜色1 终点位置, 颜色2 终点位置, ……); 取值渐变方向：可选 to 方位名称 角度度数终点位置：可选 百分比 3.径向渐变作用给按钮添加高光效果 属性123456background-image: radial-grandient( 半径 at 圆心位置, 颜色1 终点位置, 颜色2 终点位置, ……); 取值半径可以是2条，则为椭圆圆心位置取值：像素单位数值&#x2F;百分比&#x2F;方位名词","categories":[],"tags":[]},{"title":"陈的第一篇博客","slug":"我的第一篇博客","date":"2023-12-10T15:30:22.000Z","updated":"2023-12-24T14:25:03.488Z","comments":true,"path":"2023/12/10/我的第一篇博客/","permalink":"http://example.com/2023/12/10/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/","excerpt":"","text":"你好想要来一场酣畅淋漓的排位决斗吗？ 快来！ 点击开始","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2023-12-03T13:32:58.016Z","updated":"2023-12-24T14:25:13.097Z","comments":true,"path":"2023/12/03/hello-world/","permalink":"http://example.com/2023/12/03/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}